{"version":3,"file":"component---src-pages-index-tsx-7660a37ab4cc3bb479d2.js","mappings":"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","sources":["webpack://fanelesibonge-portfolio/./node_modules/gatsby-plugin-breakpoints/index.js","webpack://fanelesibonge-portfolio/./node_modules/gatsby-plugin-breakpoints/withBreakpoints.js","webpack://fanelesibonge-portfolio/./src/provider/viewport-provider.tsx","webpack://fanelesibonge-portfolio/./src/components/header/header.tsx","webpack://fanelesibonge-portfolio/./src/styles/components/mobile.module.scss","webpack://fanelesibonge-portfolio/./src/styles/components/header.module.scss","webpack://fanelesibonge-portfolio/./src/components/fonts/title.tsx","webpack://fanelesibonge-portfolio/./src/styles/components/title.module.scss","webpack://fanelesibonge-portfolio/./src/components/fonts/sub-title.tsx","webpack://fanelesibonge-portfolio/./src/styles/components/subtitle.module.scss","webpack://fanelesibonge-portfolio/./src/styles/components/about-me.module.scss","webpack://fanelesibonge-portfolio/./src/components/fonts/sub-sub-title.tsx","webpack://fanelesibonge-portfolio/./src/styles/components/subsubtitle.module.scss","webpack://fanelesibonge-portfolio/./src/assets/Fanelesibonge Malaza Resume.pdf","webpack://fanelesibonge-portfolio/./src/components/about-me/about-me.tsx","webpack://fanelesibonge-portfolio/./src/styles/components/resume.module.scss","webpack://fanelesibonge-portfolio/./src/components/resume/experience-item.tsx","webpack://fanelesibonge-portfolio/./src/styles/components/experience.module.scss","webpack://fanelesibonge-portfolio/./src/components/resume/resume.tsx","webpack://fanelesibonge-portfolio/./src/styles/components/contact.module.scss","webpack://fanelesibonge-portfolio/./node_modules/react-hook-form/dist/index.esm.mjs","webpack://fanelesibonge-portfolio/./src/components/contact-me/contact.tsx","webpack://fanelesibonge-portfolio/./src/components/desktop-component/desktop-view.tsx","webpack://fanelesibonge-portfolio/./src/components/mobile-component/mobile-view.tsx","webpack://fanelesibonge-portfolio/./src/components/index/index-component.tsx","webpack://fanelesibonge-portfolio/./src/pages/index.tsx","webpack://fanelesibonge-portfolio/./node_modules/@babel/runtime/helpers/extends.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nvar _BreakpointProvider = require(\"./BreakpointProvider\");\nexports.useBreakpoint = _BreakpointProvider.useBreakpoint;\nexports.BreakpointProvider = _BreakpointProvider.BreakpointProvider;\nexports.BreakpointContext = _BreakpointProvider.BreakpointContext;\nvar _withBreakpoints = require(\"./withBreakpoints\");\nexports.withBreakpoints = _withBreakpoints.withBreakpoints;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.withBreakpoints = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _BreakpointProvider = require(\"./BreakpointProvider\");\nconst withBreakpoints = Component => {\n  // eslint-disable-next-line react/display-name\n  return props => {\n    const breakpoints = (0, _BreakpointProvider.useBreakpoint)();\n    return /*#__PURE__*/_react.default.createElement(Component, (0, _extends2.default)({\n      breakpoints: breakpoints\n    }, props));\n  };\n};\nexports.withBreakpoints = withBreakpoints;","import * as React from \"react\";\r\n\r\nconst viewportContext = React.createContext({});\r\n\r\nconst ViewportProvider = ({ children }: { children: any }) => {\r\n  const hasWindow = typeof window !== \"undefined\";\r\n  const [width, setWidth] = React.useState(\r\n    hasWindow ? window.innerWidth : null\r\n  );\r\n  const [height, setHeight] = React.useState(\r\n    hasWindow ? window.innerHeight : null\r\n  );\r\n\r\n  const handleWindowSize = () => {\r\n    setWidth(window.innerWidth);\r\n    setHeight(window.innerHeight);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", handleWindowSize);\r\n    return () => window.removeEventListener(\"resize\", handleWindowSize);\r\n  });\r\n\r\n  return (\r\n    <viewportContext.Provider value={{ width, height }}>\r\n      {children}\r\n    </viewportContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useViewport = () => {\r\n  const { width, height } = React.useContext(viewportContext);\r\n  console.log(`This is width: ${width}, and height ${height}`);\r\n  return { width, height };\r\n};\r\n\r\nexport const breakpoint = 896;\r\n\r\nexport default ViewportProvider;\r\n","import * as React from \"react\";\r\nimport {\r\n  container,\r\n  container_wrapper,\r\n  heading,\r\n  authorName,\r\n  skills,\r\n  moreAboutMe,\r\n  linkStyle,\r\n} from \"../../styles/components/header.module.scss\";\r\nimport {\r\n  mobileContainer,\r\n  mobile_container_wrapper,\r\n  mobileHeading,\r\n  mobileSkills,\r\n  mobileAuthorName,\r\n  mobileMoreAboutMe,\r\n} from \"../../styles/components/mobile.module.scss\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst Header = ({ mobileView }: { mobileView: boolean }) => (\r\n  <div className={mobileView ? mobileContainer : container}>\r\n    <div className={mobileView ? mobile_container_wrapper : container_wrapper}>\r\n      <div className={mobileView ? mobileHeading : heading}>\r\n        <span>HELLO, WORLD</span>\r\n      </div>\r\n      <div className={mobileView ? mobileAuthorName : authorName}>\r\n        <span>I'm Fanelesibonge Malaza.</span>\r\n      </div>\r\n      <div className={mobileView ? mobileSkills : skills}>\r\n        Full Stack Software Developer\r\n      </div>\r\n      <div className={mobileView ? mobileMoreAboutMe : moreAboutMe}>\r\n        <Link className={linkStyle} to=\"/#about\">\r\n          MORE ABOUT ME{\" \"}\r\n          <StaticImage\r\n            src=\"../../assets/arrow_down_3.png\"\r\n            alt=\"downward arrow\"\r\n          />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n// export const Header = () => <title>Fanelesibonge Malaza | Portfolio</title>\r\n//\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nexport var mobileAuthorName = \"mobile-module--mobileAuthorName--e01e9\";\nexport var mobileContainer = \"mobile-module--mobileContainer--67e9b\";\nexport var mobileHeading = \"mobile-module--mobileHeading--9a4c5\";\nexport var mobileMoreAboutMe = \"mobile-module--mobileMoreAboutMe--83c4b\";\nexport var mobileSkills = \"mobile-module--mobileSkills--37297\";\nexport var mobile_container_wrapper = \"mobile-module--mobile_container_wrapper--93548\";\nexport var mobilemoreaboutme = \"mobile-module--mobilemoreaboutme--2ae12\";","// extracted by mini-css-extract-plugin\nexport var authorName = \"header-module--authorName--40aef\";\nexport var container = \"header-module--container--d4bcd\";\nexport var container_wrapper = \"header-module--container_wrapper--094b2\";\nexport var heading = \"header-module--heading--391ca\";\nexport var linkStyle = \"header-module--linkStyle--57a4e\";\nexport var moreAboutMe = \"header-module--moreAboutMe--30628\";\nexport var skills = \"header-module--skills--15201\";","import * as React from \"react\";\r\nimport {\r\n  titleStyle,\r\n  mobileTitleStyle,\r\n} from \"../../styles/components/title.module.scss\";\r\n\r\nconst Title = ({\r\n  title,\r\n  mobileView,\r\n}: {\r\n  title: string;\r\n  mobileView: boolean;\r\n}) => {\r\n  return (\r\n    <div className={mobileView ? mobileTitleStyle : titleStyle}>\r\n      <span>{title}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","// extracted by mini-css-extract-plugin\nexport var mobileTitleStyle = \"title-module--mobileTitleStyle--0dd5e\";\nexport var titleStyle = \"title-module--titleStyle--58fcc\";","import * as React from \"react\";\r\nimport {\r\n  subtitleStyle,\r\n  mobileSubtitleStyle,\r\n} from \"../../styles/components/subtitle.module.scss\";\r\n\r\nconst SubTitle = ({\r\n  subtitle,\r\n  mobileView,\r\n}: {\r\n  mobileView: boolean;\r\n  subtitle: string;\r\n}) => {\r\n  return (\r\n    <div className={mobileView ? mobileSubtitleStyle : subtitleStyle}>\r\n      <span>{subtitle}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubTitle;\r\n","// extracted by mini-css-extract-plugin\nexport var mobileSubtitleStyle = \"subtitle-module--mobileSubtitleStyle--70daa\";\nexport var subtitleStyle = \"subtitle-module--subtitleStyle--0ac84\";","// extracted by mini-css-extract-plugin\nexport var aboutTextWrapper = \"about-me-module--aboutTextWrapper--7bd20\";\nexport var aboutWrapper = \"about-me-module--aboutWrapper--d644d\";\nexport var buttonsContainer = \"about-me-module--buttonsContainer--29a87\";\nexport var downloadCVButton = \"about-me-module--downloadCVButton--cc3a3\";\nexport var heroImage = \"about-me-module--heroImage--8b85f\";\nexport var hireMeButton = \"about-me-module--hireMeButton--a1854\";\nexport var mobileAboutTextWrapper = \"about-me-module--mobileAboutTextWrapper--ff7d6\";\nexport var mobileAboutWrapper = \"about-me-module--mobileAboutWrapper--d6c4f\";\nexport var mobileButtonsContainer = \"about-me-module--mobileButtonsContainer--06434\";\nexport var mobileDownloadCVButton = \"about-me-module--mobileDownloadCVButton--a4824\";\nexport var mobileHeroImage = \"about-me-module--mobileHeroImage--5a426\";\nexport var mobileHireMeButton = \"about-me-module--mobileHireMeButton--4319c\";\nexport var mobileTextStyle = \"about-me-module--mobileTextStyle--ccf55\";\nexport var mobileTextTitleStyle = \"about-me-module--mobileTextTitleStyle--5fb2f\";\nexport var mobileWrapper = \"about-me-module--mobileWrapper--cc5be\";\nexport var profileItemWrapper = \"about-me-module--profileItemWrapper--3262f\";\nexport var textStyle = \"about-me-module--textStyle--f5460\";\nexport var textTitleStyle = \"about-me-module--textTitleStyle--d8fc2\";\nexport var wrapper = \"about-me-module--wrapper--c705d\";","import * as React from \"react\";\r\nimport {\r\n  subtitle,\r\n  mobileSubtitle,\r\n} from \"../../styles/components/subsubtitle.module.scss\";\r\n\r\nconst SubSubTitle = ({\r\n  subsubtitle,\r\n  mobileView,\r\n}: {\r\n  subsubtitle: string;\r\n  mobileView: boolean;\r\n}) => {\r\n  return (\r\n    <div className={mobileView ? mobileSubtitle : subtitle}>{subsubtitle}</div>\r\n  );\r\n};\r\n\r\nexport default SubSubTitle;\r\n","// extracted by mini-css-extract-plugin\nexport var mobileSubtitle = \"subsubtitle-module--mobileSubtitle--83307\";\nexport var subtitle = \"subsubtitle-module--subtitle--04f81\";","export default __webpack_public_path__ + \"static/Fanelesibonge Malaza Resume-51779ff6104f4a1f5b90660741a7c5c2.pdf\";","import * as React from \"react\";\r\nimport Title from \"../fonts/title\";\r\nimport SubTitle from \"../fonts/sub-title\";\r\nimport {\r\n  heroImage,\r\n  aboutTextWrapper,\r\n  aboutWrapper,\r\n  textTitleStyle,\r\n  textStyle,\r\n  profileItemWrapper,\r\n  wrapper,\r\n  mobileWrapper,\r\n  mobileHeroImage,\r\n  mobileAboutWrapper,\r\n  mobileAboutTextWrapper,\r\n  mobileTextStyle,\r\n  mobileTextTitleStyle,\r\n  hireMeButton,\r\n  mobileHireMeButton,\r\n  downloadCVButton,\r\n  mobileDownloadCVButton,\r\n  buttonsContainer,\r\n  mobileButtonsContainer,\r\n} from \"../../styles/components/about-me.module.scss\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\nimport SubSubTitle from \"../fonts/sub-sub-title\";\r\nimport resume from \"../../assets/Fanelesibonge Malaza Resume.pdf\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst AboutMe = ({ mobileView, id }: { mobileView: boolean; id: string }) => {\r\n  return (\r\n    <div id={id} className={mobileView ? mobileWrapper : wrapper}>\r\n      <Title title=\"ABOUT ME\" mobileView={mobileView}></Title>\r\n      <SubTitle\r\n        mobileView={mobileView}\r\n        subtitle=\"Let me introduce myself.\"\r\n      ></SubTitle>\r\n\r\n      <div className={mobileView ? mobileAboutWrapper : aboutWrapper}>\r\n        <div>\r\n          <StaticImage\r\n            className={mobileView ? mobileHeroImage : heroImage}\r\n            src=\"../../assets/background_1.jpg\"\r\n            alt=\"Fanelesibonge sitting on a chair looking professional\"\r\n          />\r\n        </div>\r\n        <div className={mobileView ? mobileAboutTextWrapper : aboutTextWrapper}>\r\n          <p>\r\n            As a youth from Eswatini, I possess an avid eagerness to constantly\r\n            challenge my intellectual abilities by continuously aqcuiring novel\r\n            concepts and insights. My passion for problem-solving has led me to\r\n            engage in diverse professions, where I have created software with\r\n            varying applications for various stakeholders clients such as\r\n            finance (\r\n            <a\r\n              href=\"https://play.google.com/store/apps/details?id=com.simplesource.simple_books\"\r\n              target=\"_blank\"\r\n            >\r\n              <b>Simple Books</b>\r\n            </a>\r\n            ), voting systems (\r\n            <a href=\"https://voter.ummo.xyz\" target=\"_blank\">\r\n              <b>SRC Voter</b>\r\n            </a>\r\n            ) and location addressing (\r\n            <a\r\n              href=\"https://play.google.com/store/apps/details?id=xyz.ummo.pozi\"\r\n              target=\"_blank\"\r\n            >\r\n              <b>Pozi - Digital Addressor</b>\r\n            </a>\r\n            )\r\n          </p>\r\n\r\n          <div>\r\n            <SubSubTitle\r\n              mobileView={mobileView}\r\n              subsubtitle=\"PROFILE\"\r\n            ></SubSubTitle>\r\n            <div className={profileItemWrapper}>\r\n              <span\r\n                className={mobileView ? mobileTextTitleStyle : textTitleStyle}\r\n              >\r\n                FULLNAME:\r\n              </span>\r\n              <span className={mobileView ? mobileTextStyle : textStyle}>\r\n                Fanelesibonge Phiwokuhle Malaza\r\n              </span>\r\n            </div>\r\n            <br />\r\n            <div className={profileItemWrapper}>\r\n              <span\r\n                className={mobileView ? mobileTextTitleStyle : textTitleStyle}\r\n              >\r\n                BIRTH DATE:\r\n              </span>\r\n              <span className={mobileView ? mobileTextStyle : textStyle}>\r\n                July 19, 1996\r\n              </span>\r\n            </div>\r\n            <br />\r\n            <div className={profileItemWrapper}>\r\n              <span\r\n                className={mobileView ? mobileTextTitleStyle : textTitleStyle}\r\n              >\r\n                JOB:\r\n              </span>\r\n              <span className={mobileView ? mobileTextStyle : textStyle}>\r\n                Freelancer, FullStack Developer (Frontend & Backend)\r\n              </span>\r\n            </div>\r\n            <br />\r\n            <div className={profileItemWrapper}>\r\n              <span\r\n                className={mobileView ? mobileTextTitleStyle : textTitleStyle}\r\n              >\r\n                EMAIL:\r\n              </span>\r\n              <span className={mobileView ? mobileTextStyle : textStyle}>\r\n                malazafanelesibonge@gmail.com\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={mobileView ? mobileButtonsContainer : buttonsContainer}>\r\n        <Link to=\"/#contact\">\r\n          <div className={mobileView ? mobileHireMeButton : hireMeButton}>\r\n            HIRE ME\r\n          </div>\r\n        </Link>\r\n\r\n        <a href={resume} download>\r\n          <div\r\n            className={mobileView ? mobileDownloadCVButton : downloadCVButton}\r\n          >\r\n            DOWNLOAD CV\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","// extracted by mini-css-extract-plugin\nexport var mobileResume_text = \"resume-module--mobileResume_text--cd4eb\";\nexport var resume_text = \"resume-module--resume_text--03a07\";\nexport var resume_wrapper = \"resume-module--resume_wrapper--c787b\";\nexport var workExperience = \"resume-module--workExperience--67a44\";","import { GatsbyImage, StaticImage, getImage } from \"gatsby-plugin-image\";\r\nimport * as React from \"react\";\r\nimport {\r\n  experienceWrapper,\r\n  job_title,\r\n  job_icon,\r\n  icon_style,\r\n  icon_style_wrapper,\r\n  vertical_line,\r\n  title_text,\r\n  duration_text,\r\n  work_wrapper,\r\n  company_name,\r\n  company_desc_separator,\r\n  job_description,\r\n  mobileExperienceWrapper,\r\n  mobileJob_title,\r\n  mobileVertical_line,\r\n  mobileTitle_text,\r\n  mobileDuration_text,\r\n  mobileCompany_name,\r\n  mobileCompany_desc_separator,\r\n  mobileJob_description,\r\n  mobileWork_wrapper,\r\n} from \"../../styles/components/experience.module.scss\";\r\n\r\nconst ExperienceItem = ({\r\n  mobileView,\r\n  experienceTitle,\r\n  experienceDuration,\r\n  iconPath,\r\n  iconAlt,\r\n  companyName,\r\n  jobDescription,\r\n}: {\r\n  mobileView: boolean;\r\n  experienceTitle: string;\r\n  experienceDuration: string;\r\n  iconPath: any;\r\n  iconAlt: string;\r\n  companyName: string;\r\n  jobDescription: string;\r\n}) => {\r\n  return (\r\n    <div className={mobileView ? mobileExperienceWrapper : experienceWrapper}>\r\n      <div className={mobileView ? mobileJob_title : job_title}>\r\n        <div className={mobileView ? mobileTitle_text : title_text}>\r\n          {experienceTitle}\r\n        </div>\r\n        <div className={mobileView ? mobileDuration_text : duration_text}>\r\n          {experienceDuration}\r\n        </div>\r\n      </div>\r\n      <div className={job_icon}>\r\n        <div className={mobileView ? mobileVertical_line : vertical_line}></div>\r\n      </div>\r\n      <div className={mobileView ? mobileWork_wrapper : work_wrapper}>\r\n        <div className={mobileView ? mobileCompany_name : company_name}>\r\n          {companyName}\r\n        </div>\r\n        <div\r\n          className={\r\n            mobileView ? mobileCompany_desc_separator : company_desc_separator\r\n          }\r\n        ></div>\r\n        <div className={mobileView ? mobileJob_description : job_description}>\r\n          {jobDescription}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExperienceItem;\r\n","// extracted by mini-css-extract-plugin\nexport var buttonStyle = \"experience-module--buttonStyle--4e5f8\";\nexport var company_desc_separator = \"experience-module--company_desc_separator--2c7e2\";\nexport var company_name = \"experience-module--company_name--a9ce9\";\nexport var duration_text = \"experience-module--duration_text--eda7c\";\nexport var experienceWrapper = \"experience-module--experienceWrapper--ce49c\";\nexport var icon_style_wrapper = \"experience-module--icon_style_wrapper--ada3e\";\nexport var job_description = \"experience-module--job_description--d1cd7\";\nexport var job_icon = \"experience-module--job_icon--759d1\";\nexport var job_title = \"experience-module--job_title--92c8a\";\nexport var mobileCompany_desc_separator = \"experience-module--mobileCompany_desc_separator--6aa08\";\nexport var mobileCompany_name = \"experience-module--mobileCompany_name--5b3d7\";\nexport var mobileDuration_text = \"experience-module--mobileDuration_text--5f020\";\nexport var mobileExperienceWrapper = \"experience-module--mobileExperienceWrapper--d322a\";\nexport var mobileJob_description = \"experience-module--mobileJob_description--29e8e\";\nexport var mobileJob_title = \"experience-module--mobileJob_title--6b1ad\";\nexport var mobileTitle_text = \"experience-module--mobileTitle_text--86162\";\nexport var mobileVertical_line = \"experience-module--mobileVertical_line--bb95c\";\nexport var mobileWork_wrapper = \"experience-module--mobileWork_wrapper--67427\";\nexport var title_text = \"experience-module--title_text--5053b\";\nexport var vertical_line = \"experience-module--vertical_line--d275b\";\nexport var work_wrapper = \"experience-module--work_wrapper--762ba\";","import * as React from \"react\";\r\nimport Title from \"../fonts/title\";\r\nimport SubTitle from \"../fonts/sub-title\";\r\nimport {\r\n  resume_text,\r\n  resume_wrapper,\r\n  workExperience,\r\n  mobileResume_text,\r\n} from \"../../styles/components/resume.module.scss\";\r\nimport ExperienceItem from \"./experience-item\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\n\r\nconst ResumeView = ({ mobileView }: { mobileView: boolean }) => {\r\n  // console.log(data);\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allMdx(sort: { frontmatter: { order: ASC } }) {\r\n        edges {\r\n          node {\r\n            excerpt(pruneLength: 1055)\r\n            id\r\n            frontmatter {\r\n              experienceTitle\r\n              experienceDuration\r\n              iconPath\r\n              iconAlt\r\n              companyName\r\n              technologiesUsed\r\n              link_to_1\r\n              link_to_2\r\n              majors\r\n              school\r\n              duration\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  // console.log(data.allMdx.edges);\r\n\r\n  return (\r\n    <div className={resume_wrapper}>\r\n      <Title title=\"RESUME\" mobileView={mobileView}></Title>\r\n      <SubTitle\r\n        subtitle=\"More of my credentials.\"\r\n        mobileView={mobileView}\r\n      ></SubTitle>\r\n      <div className={mobileView ? mobileResume_text : resume_text}>\r\n        EXPERT IN: Web Development (HTML5, CSS3, JS6), Android Apps (Java, Dart,\r\n        Flutter), Desktop Apps (Python, Java, Flutter), API Development.\r\n        <br />\r\n        <br />\r\n        INTERMEDIATE IN: Nest.Js, Vue.Js, TypeScript, Numerical Analysis,\r\n        Database Management, Angular, Gatsby, Sass.\r\n      </div>\r\n      <div className={workExperience}>Work Experience</div>\r\n      {data.allMdx.edges.map((edge: any) =>\r\n        // const node = edge.node.frontmatter;\r\n        // console.log('')\r\n        edge.node.frontmatter.companyName != null ? (\r\n          <ExperienceItem\r\n            mobileView={mobileView}\r\n            experienceTitle={edge.node.frontmatter.experienceTitle}\r\n            experienceDuration={edge.node.frontmatter.experienceDuration}\r\n            iconPath={edge.node.frontmatter.iconPath}\r\n            iconAlt={edge.node.frontmatter.iconAlt}\r\n            companyName={edge.node.frontmatter.companyName}\r\n            jobDescription={edge.node.excerpt}\r\n          />\r\n        ) : null\r\n      )}\r\n\r\n      <div className={workExperience}>Education</div>\r\n      {data.allMdx.edges.map((edge: any) =>\r\n        edge.node.frontmatter.majors != null ? (\r\n          <ExperienceItem\r\n            mobileView={mobileView}\r\n            experienceTitle={edge.node.frontmatter.majors}\r\n            experienceDuration={edge.node.frontmatter.duration}\r\n            companyName={edge.node.frontmatter.school}\r\n            iconPath={\"\"}\r\n            iconAlt={\"\"}\r\n            jobDescription={\"\"}\r\n          />\r\n        ) : null\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResumeView;\r\n","// extracted by mini-css-extract-plugin\nexport var contactDataWrapper = \"contact-module--contactDataWrapper--7b828\";\nexport var contactItem = \"contact-module--contactItem--635db\";\nexport var contactText = \"contact-module--contactText--0f7c6\";\nexport var copyRight = \"contact-module--copyRight--c321a\";\nexport var error = \"contact-module--error--7577d\";\nexport var form = \"contact-module--form--79268\";\nexport var icon = \"contact-module--icon--895e3\";\nexport var infoText = \"contact-module--infoText--58dc8\";\nexport var input = \"contact-module--input--76840\";\nexport var mobileContactDataWrapper = \"contact-module--mobileContactDataWrapper--74b7f\";\nexport var mobileContactItem = \"contact-module--mobileContactItem--a457a\";\nexport var mobileContactText = \"contact-module--mobileContactText--5340e\";\nexport var mobileError = \"contact-module--mobileError--7f2bf\";\nexport var mobileForm = \"contact-module--mobileForm--093d4\";\nexport var mobileIcon = \"contact-module--mobileIcon--15428\";\nexport var mobileInfoText = \"contact-module--mobileInfoText--67b5d\";\nexport var mobileInput = \"contact-module--mobileInput--7a44e\";\nexport var mobileText = \"contact-module--mobileText--2eba0\";\nexport var subtitle = \"contact-module--subtitle--572c5\";\nexport var text = \"contact-module--text--5d767\";\nexport var wrapper = \"contact-module--wrapper--6ec51\";","import React from 'react';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isDateObject = (value) => value instanceof Date;\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\nvar isObject = (value) => !isNullOrUndefined(value) &&\n    !Array.isArray(value) &&\n    isObjectType(value) &&\n    !isDateObject(value);\n\nvar getEventValue = (event) => isObject(event) && event.target\n    ? isCheckBoxInput(event.target)\n        ? event.target.checked\n        : event.target.value\n    : event;\n\nvar getNodeParentName = (name) => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n\nvar isPlainObject = (tempObject) => {\n    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\n    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));\n};\n\nvar isWeb = typeof window !== 'undefined' &&\n    typeof window.HTMLElement !== 'undefined' &&\n    typeof document !== 'undefined';\n\nfunction cloneObject(data) {\n    let copy;\n    const isArray = Array.isArray(data);\n    if (data instanceof Date) {\n        copy = new Date(data);\n    }\n    else if (data instanceof Set) {\n        copy = new Set(data);\n    }\n    else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n        (isArray || isObject(data))) {\n        copy = isArray ? [] : {};\n        if (!Array.isArray(data) && !isPlainObject(data)) {\n            copy = data;\n        }\n        else {\n            for (const key in data) {\n                copy[key] = cloneObject(data[key]);\n            }\n        }\n    }\n    else {\n        return data;\n    }\n    return copy;\n}\n\nvar compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (obj, path, defaultValue) => {\n    if (!path || !isObject(obj)) {\n        return defaultValue;\n    }\n    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], obj);\n    return isUndefined(result) || result === obj\n        ? isUndefined(obj[path])\n            ? defaultValue\n            : obj[path]\n        : result;\n};\n\nconst EVENTS = {\n    BLUR: 'blur',\n    FOCUS_OUT: 'focusout',\n    CHANGE: 'change',\n};\nconst VALIDATION_MODE = {\n    onBlur: 'onBlur',\n    onChange: 'onChange',\n    onSubmit: 'onSubmit',\n    onTouched: 'onTouched',\n    all: 'all',\n};\nconst INPUT_VALIDATION_RULES = {\n    max: 'max',\n    min: 'min',\n    maxLength: 'maxLength',\n    minLength: 'minLength',\n    pattern: 'pattern',\n    required: 'required',\n    validate: 'validate',\n};\n\nconst HookFormContext = React.createContext(null);\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst useFormContext = () => React.useContext(HookFormContext);\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useFrom methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst FormProvider = (props) => {\n    const { children, ...data } = props;\n    return (React.createElement(HookFormContext.Provider, { value: data }, children));\n};\n\nvar getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {\n    const result = {\n        defaultValues: control._defaultValues,\n    };\n    for (const key in formState) {\n        Object.defineProperty(result, key, {\n            get: () => {\n                const _key = key;\n                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n                }\n                localProxyFormState && (localProxyFormState[_key] = true);\n                return formState[_key];\n            },\n        });\n    }\n    return result;\n};\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {\n    updateFormState(formStateData);\n    const { name, ...formState } = formStateData;\n    return (isEmptyObject(formState) ||\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\n            (!isRoot || VALIDATION_MODE.all)));\n};\n\nvar convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);\n\nvar shouldSubscribeByName = (name, signalName, exact) => exact && signalName\n    ? name === signalName\n    : !name ||\n        !signalName ||\n        name === signalName ||\n        convertToArrayPayload(name).some((currentName) => currentName &&\n            (currentName.startsWith(signalName) ||\n                signalName.startsWith(currentName)));\n\nfunction useSubscribe(props) {\n    const _props = React.useRef(props);\n    _props.current = props;\n    React.useEffect(() => {\n        const subscription = !props.disabled &&\n            _props.current.subject &&\n            _props.current.subject.subscribe({\n                next: _props.current.next,\n            });\n        return () => {\n            subscription && subscription.unsubscribe();\n        };\n    }, [props.disabled]);\n}\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState(props) {\n    const methods = useFormContext();\n    const { control = methods.control, disabled, name, exact } = props || {};\n    const [formState, updateFormState] = React.useState(control._formState);\n    const _mounted = React.useRef(true);\n    const _localProxyFormState = React.useRef({\n        isDirty: false,\n        isLoading: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    });\n    const _name = React.useRef(name);\n    _name.current = name;\n    useSubscribe({\n        disabled,\n        next: (value) => _mounted.current &&\n            shouldSubscribeByName(_name.current, value.name, exact) &&\n            shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) &&\n            updateFormState({\n                ...control._formState,\n                ...value,\n            }),\n        subject: control._subjects.state,\n    });\n    React.useEffect(() => {\n        _mounted.current = true;\n        _localProxyFormState.current.isValid && control._updateValid(true);\n        return () => {\n            _mounted.current = false;\n        };\n    }, [control]);\n    return getProxyFormState(formState, control, _localProxyFormState.current, false);\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {\n    if (isString(names)) {\n        isGlobal && _names.watch.add(names);\n        return get(formValues, names, defaultValue);\n    }\n    if (Array.isArray(names)) {\n        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));\n    }\n    isGlobal && (_names.watchAll = true);\n    return formValues;\n};\n\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nfunction useWatch(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, defaultValue, disabled, exact, } = props || {};\n    const _name = React.useRef(name);\n    _name.current = name;\n    useSubscribe({\n        disabled,\n        subject: control._subjects.values,\n        next: (formState) => {\n            if (shouldSubscribeByName(_name.current, formState.name, exact)) {\n                updateValue(cloneObject(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, false, defaultValue)));\n            }\n        },\n    });\n    const [value, updateValue] = React.useState(control._getWatch(name, defaultValue));\n    React.useEffect(() => control._removeUnmounted());\n    return value;\n}\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar stringToPath = (input) => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nfunction set(object, path, value) {\n    let index = -1;\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\n    const length = tempPath.length;\n    const lastIndex = length - 1;\n    while (++index < length) {\n        const key = tempPath[index];\n        let newValue = value;\n        if (index !== lastIndex) {\n            const objValue = object[key];\n            newValue =\n                isObject(objValue) || Array.isArray(objValue)\n                    ? objValue\n                    : !isNaN(+tempPath[index + 1])\n                        ? []\n                        : {};\n        }\n        object[key] = newValue;\n        object = object[key];\n    }\n    return object;\n}\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nfunction useController(props) {\n    const methods = useFormContext();\n    const { name, control = methods.control, shouldUnregister } = props;\n    const isArrayField = isNameInFieldArray(control._names.array, name);\n    const value = useWatch({\n        control,\n        name,\n        defaultValue: get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)),\n        exact: true,\n    });\n    const formState = useFormState({\n        control,\n        name,\n    });\n    const _registerProps = React.useRef(control.register(name, {\n        ...props.rules,\n        value,\n    }));\n    React.useEffect(() => {\n        const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\n        const updateMounted = (name, value) => {\n            const field = get(control._fields, name);\n            if (field) {\n                field._f.mount = value;\n            }\n        };\n        updateMounted(name, true);\n        if (_shouldUnregisterField) {\n            const value = cloneObject(get(control._options.defaultValues, name));\n            set(control._defaultValues, name, value);\n            if (isUndefined(get(control._formValues, name))) {\n                set(control._formValues, name, value);\n            }\n        }\n        return () => {\n            (isArrayField\n                ? _shouldUnregisterField && !control._state.action\n                : _shouldUnregisterField)\n                ? control.unregister(name)\n                : updateMounted(name, false);\n        };\n    }, [name, control, isArrayField, shouldUnregister]);\n    return {\n        field: {\n            name,\n            value,\n            onChange: React.useCallback((event) => _registerProps.current.onChange({\n                target: {\n                    value: getEventValue(event),\n                    name: name,\n                },\n                type: EVENTS.CHANGE,\n            }), [name]),\n            onBlur: React.useCallback(() => _registerProps.current.onBlur({\n                target: {\n                    value: get(control._formValues, name),\n                    name: name,\n                },\n                type: EVENTS.BLUR,\n            }), [name, control]),\n            ref: (elm) => {\n                const field = get(control._fields, name);\n                if (field && elm) {\n                    field._f.ref = {\n                        focus: () => elm.focus(),\n                        select: () => elm.select(),\n                        setCustomValidity: (message) => elm.setCustomValidity(message),\n                        reportValidity: () => elm.reportValidity(),\n                    };\n                }\n            },\n        },\n        formState,\n        fieldState: Object.defineProperties({}, {\n            invalid: {\n                enumerable: true,\n                get: () => !!get(formState.errors, name),\n            },\n            isDirty: {\n                enumerable: true,\n                get: () => !!get(formState.dirtyFields, name),\n            },\n            isTouched: {\n                enumerable: true,\n                get: () => !!get(formState.touchedFields, name),\n            },\n            error: {\n                enumerable: true,\n                get: () => get(formState.errors, name),\n            },\n        }),\n    };\n}\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = (props) => props.render(useController(props));\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n            ...(errors[name] && errors[name].types ? errors[name].types : {}),\n            [type]: message || true,\n        },\n    }\n    : {};\n\nconst focusFieldBy = (fields, callback, fieldsNames) => {\n    for (const key of fieldsNames || Object.keys(fields)) {\n        const field = get(fields, key);\n        if (field) {\n            const { _f, ...currentField } = field;\n            if (_f && callback(_f.name)) {\n                if (_f.ref.focus) {\n                    _f.ref.focus();\n                    break;\n                }\n                else if (_f.refs && _f.refs[0].focus) {\n                    _f.refs[0].focus();\n                    break;\n                }\n            }\n            else if (isObject(currentField)) {\n                focusFieldBy(currentField, callback);\n            }\n        }\n    }\n};\n\nvar generateId = () => {\n    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16 + d) % 16 | 0;\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n};\n\nvar getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n\nvar getValidationModes = (mode) => ({\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&\n    (_names.watchAll ||\n        _names.watch.has(name) ||\n        [..._names.watch].some((watchName) => name.startsWith(watchName) &&\n            /^\\.\\w+/.test(name.slice(watchName.length))));\n\nvar updateFieldArrayRootError = (errors, error, name) => {\n    const fieldArrayErrors = compact(get(errors, name));\n    set(fieldArrayErrors, 'root', error[name]);\n    set(errors, name, fieldArrayErrors);\n    return errors;\n};\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isHTMLElement = (value) => {\n    if (!isWeb) {\n        return false;\n    }\n    const owner = value ? value.ownerDocument : 0;\n    return (value instanceof\n        (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement));\n};\n\nvar isMessage = (value) => isString(value);\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isRegex = (value) => value instanceof RegExp;\n\nconst defaultResult = {\n    value: false,\n    isValid: false,\n};\nconst validResult = { value: true, isValid: true };\nvar getCheckboxValue = (options) => {\n    if (Array.isArray(options)) {\n        if (options.length > 1) {\n            const values = options\n                .filter((option) => option && option.checked && !option.disabled)\n                .map((option) => option.value);\n            return { value: values, isValid: !!values.length };\n        }\n        return options[0].checked && !options[0].disabled\n            ? // @ts-expect-error expected to work in the browser\n                options[0].attributes && !isUndefined(options[0].attributes.value)\n                    ? isUndefined(options[0].value) || options[0].value === ''\n                        ? validResult\n                        : { value: options[0].value, isValid: true }\n                    : validResult\n            : defaultResult;\n    }\n    return defaultResult;\n};\n\nconst defaultReturn = {\n    isValid: false,\n    value: null,\n};\nvar getRadioValue = (options) => Array.isArray(options)\n    ? options.reduce((previous, option) => option && option.checked && !option.disabled\n        ? {\n            isValid: true,\n            value: option.value,\n        }\n        : previous, defaultReturn)\n    : defaultReturn;\n\nfunction getValidateError(result, ref, type = 'validate') {\n    if (isMessage(result) ||\n        (Array.isArray(result) && result.every(isMessage)) ||\n        (isBoolean(result) && !result)) {\n        return {\n            type,\n            message: isMessage(result) ? result : '',\n            ref,\n        };\n    }\n}\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n    };\n\nvar validateField = async (field, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, disabled, } = field._f;\n    const inputValue = get(formValues, name);\n    if (!mount || disabled) {\n        return {};\n    }\n    const inputRef = refs ? refs[0] : ref;\n    const setCustomValidity = (message) => {\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n            inputRef.reportValidity();\n        }\n    };\n    const error = {};\n    const isRadio = isRadioInput(ref);\n    const isCheckBox = isCheckBoxInput(ref);\n    const isRadioOrCheckbox = isRadio || isCheckBox;\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) &&\n        isUndefined(ref.value) &&\n        isUndefined(inputValue)) ||\n        (isHTMLElement(ref) && ref.value === '') ||\n        inputValue === '' ||\n        (Array.isArray(inputValue) && !inputValue.length);\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\n        error[name] = {\n            type: exceedMax ? maxType : minType,\n            message,\n            ref,\n            ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n        };\n    };\n    if (isFieldArray\n        ? !Array.isArray(inputValue) || !inputValue.length\n        : required &&\n            ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n                (isBoolean(inputValue) && !inputValue) ||\n                (isCheckBox && !getCheckboxValue(refs).isValid) ||\n                (isRadio && !getRadioValue(refs).isValid))) {\n        const { value, message } = isMessage(required)\n            ? { value: !!required, message: required }\n            : getValueAndMessage(required);\n        if (value) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.required,\n                message,\n                ref: inputRef,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n        let exceedMax;\n        let exceedMin;\n        const maxOutput = getValueAndMessage(max);\n        const minOutput = getValueAndMessage(min);\n        if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\n            const valueNumber = ref.valueAsNumber ||\n                (inputValue ? +inputValue : inputValue);\n            if (!isNullOrUndefined(maxOutput.value)) {\n                exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n                exceedMin = valueNumber < minOutput.value;\n            }\n        }\n        else {\n            const valueDate = ref.valueAsDate || new Date(inputValue);\n            const convertTimeToDate = (time) => new Date(new Date().toDateString() + ' ' + time);\n            const isTime = ref.type == 'time';\n            const isWeek = ref.type == 'week';\n            if (isString(maxOutput.value) && inputValue) {\n                exceedMax = isTime\n                    ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n                    : isWeek\n                        ? inputValue > maxOutput.value\n                        : valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value) && inputValue) {\n                exceedMin = isTime\n                    ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n                    : isWeek\n                        ? inputValue < minOutput.value\n                        : valueDate < new Date(minOutput.value);\n            }\n        }\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if ((maxLength || minLength) &&\n        !isEmpty &&\n        (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))) {\n        const maxLengthOutput = getValueAndMessage(maxLength);\n        const minLengthOutput = getValueAndMessage(minLength);\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\n            inputValue.length > +maxLengthOutput.value;\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\n            inputValue.length < +minLengthOutput.value;\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if (pattern && !isEmpty && isString(inputValue)) {\n        const { value: patternValue, message } = getValueAndMessage(pattern);\n        if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.pattern,\n                message,\n                ref,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (validate) {\n        if (isFunction(validate)) {\n            const result = await validate(inputValue, formValues);\n            const validateError = getValidateError(result, inputRef);\n            if (validateError) {\n                error[name] = {\n                    ...validateError,\n                    ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message),\n                };\n                if (!validateAllFieldCriteria) {\n                    setCustomValidity(validateError.message);\n                    return error;\n                }\n            }\n        }\n        else if (isObject(validate)) {\n            let validationResult = {};\n            for (const key in validate) {\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n                    break;\n                }\n                const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);\n                if (validateError) {\n                    validationResult = {\n                        ...validateError,\n                        ...appendErrorsCurry(key, validateError.message),\n                    };\n                    setCustomValidity(validateError.message);\n                    if (validateAllFieldCriteria) {\n                        error[name] = validationResult;\n                    }\n                }\n            }\n            if (!isEmptyObject(validationResult)) {\n                error[name] = {\n                    ref: inputRef,\n                    ...validationResult,\n                };\n                if (!validateAllFieldCriteria) {\n                    return error;\n                }\n            }\n        }\n    }\n    setCustomValidity(true);\n    return error;\n};\n\nfunction append(data, value) {\n    return [...data, ...convertToArrayPayload(value)];\n}\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;\n\nfunction insert(data, index, value) {\n    return [\n        ...data.slice(0, index),\n        ...convertToArrayPayload(value),\n        ...data.slice(index),\n    ];\n}\n\nvar moveArrayAt = (data, from, to) => {\n    if (!Array.isArray(data)) {\n        return [];\n    }\n    if (isUndefined(data[to])) {\n        data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n};\n\nfunction prepend(data, value) {\n    return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}\n\nfunction removeAtIndexes(data, indexes) {\n    let i = 0;\n    const temp = [...data];\n    for (const index of indexes) {\n        temp.splice(index - i, 1);\n        i++;\n    }\n    return compact(temp).length ? temp : [];\n}\nvar removeArrayAt = (data, index) => isUndefined(index)\n    ? []\n    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\n    data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\n};\n\nfunction baseGet(object, updatePath) {\n    const length = updatePath.slice(0, -1).length;\n    let index = 0;\n    while (index < length) {\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\n    }\n    return object;\n}\nfunction isEmptyArray(obj) {\n    for (const key in obj) {\n        if (!isUndefined(obj[key])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction unset(object, path) {\n    const paths = Array.isArray(path)\n        ? path\n        : isKey(path)\n            ? [path]\n            : stringToPath(path);\n    const childObject = paths.length === 1 ? object : baseGet(object, paths);\n    const index = paths.length - 1;\n    const key = paths[index];\n    if (childObject) {\n        delete childObject[key];\n    }\n    if (index !== 0 &&\n        ((isObject(childObject) && isEmptyObject(childObject)) ||\n            (Array.isArray(childObject) && isEmptyArray(childObject)))) {\n        unset(object, paths.slice(0, -1));\n    }\n    return object;\n}\n\nvar updateAt = (fieldValues, index, value) => {\n    fieldValues[index] = value;\n    return fieldValues;\n};\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFieldArray(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, } = props;\n    const [fields, setFields] = React.useState(control._getFieldArray(name));\n    const ids = React.useRef(control._getFieldArray(name).map(generateId));\n    const _fieldIds = React.useRef(fields);\n    const _name = React.useRef(name);\n    const _actioned = React.useRef(false);\n    _name.current = name;\n    _fieldIds.current = fields;\n    control._names.array.add(name);\n    props.rules &&\n        control.register(name, props.rules);\n    useSubscribe({\n        next: ({ values, name: fieldArrayName, }) => {\n            if (fieldArrayName === _name.current || !fieldArrayName) {\n                const fieldValues = get(values, _name.current);\n                if (Array.isArray(fieldValues)) {\n                    setFields(fieldValues);\n                    ids.current = fieldValues.map(generateId);\n                }\n            }\n        },\n        subject: control._subjects.array,\n    });\n    const updateValues = React.useCallback((updatedFieldArrayValues) => {\n        _actioned.current = true;\n        control._updateFieldArray(name, updatedFieldArrayValues);\n    }, [control, name]);\n    const append$1 = (value, options) => {\n        const appendValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = append(control._getFieldArray(name), appendValue);\n        control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);\n        ids.current = append(ids.current, appendValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, append, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const prepend$1 = (value, options) => {\n        const prependValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = prepend(control._getFieldArray(name), prependValue);\n        control._names.focus = getFocusFieldName(name, 0, options);\n        ids.current = prepend(ids.current, prependValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, prepend, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const remove = (index) => {\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);\n        ids.current = removeArrayAt(ids.current, index);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n            argA: index,\n        });\n    };\n    const insert$1 = (index, value, options) => {\n        const insertValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);\n        control._names.focus = getFocusFieldName(name, index, options);\n        ids.current = insert(ids.current, index, insertValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, insert, {\n            argA: index,\n            argB: fillEmptyArray(value),\n        });\n    };\n    const swap = (indexA, indexB) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n        swapArrayAt(ids.current, indexA, indexB);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, swapArrayAt, {\n            argA: indexA,\n            argB: indexB,\n        }, false);\n    };\n    const move = (from, to) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        moveArrayAt(updatedFieldArrayValues, from, to);\n        moveArrayAt(ids.current, from, to);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, moveArrayAt, {\n            argA: from,\n            argB: to,\n        }, false);\n    };\n    const update = (index, value) => {\n        const updateValue = cloneObject(value);\n        const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);\n        ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);\n        updateValues(updatedFieldArrayValues);\n        setFields([...updatedFieldArrayValues]);\n        control._updateFieldArray(name, updatedFieldArrayValues, updateAt, {\n            argA: index,\n            argB: updateValue,\n        }, true, false);\n    };\n    const replace = (value) => {\n        const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n        ids.current = updatedFieldArrayValues.map(generateId);\n        updateValues([...updatedFieldArrayValues]);\n        setFields([...updatedFieldArrayValues]);\n        control._updateFieldArray(name, [...updatedFieldArrayValues], (data) => data, {}, true, false);\n    };\n    React.useEffect(() => {\n        control._state.action = false;\n        isWatched(name, control._names) &&\n            control._subjects.state.next({\n                ...control._formState,\n            });\n        if (_actioned.current &&\n            (!getValidationModes(control._options.mode).isOnSubmit ||\n                control._formState.isSubmitted)) {\n            if (control._options.resolver) {\n                control._executeSchema([name]).then((result) => {\n                    const error = get(result.errors, name);\n                    const existingError = get(control._formState.errors, name);\n                    if (existingError ? !error && existingError.type : error && error.type) {\n                        error\n                            ? set(control._formState.errors, name, error)\n                            : unset(control._formState.errors, name);\n                        control._subjects.state.next({\n                            errors: control._formState.errors,\n                        });\n                    }\n                });\n            }\n            else {\n                const field = get(control._fields, name);\n                if (field && field._f) {\n                    validateField(field, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) &&\n                        control._subjects.state.next({\n                            errors: updateFieldArrayRootError(control._formState.errors, error, name),\n                        }));\n                }\n            }\n        }\n        control._subjects.values.next({\n            name,\n            values: { ...control._formValues },\n        });\n        control._names.focus &&\n            focusFieldBy(control._fields, (key) => !!key && key.startsWith(control._names.focus || ''));\n        control._names.focus = '';\n        control._updateValid();\n    }, [fields, name, control]);\n    React.useEffect(() => {\n        !get(control._formValues, name) && control._updateFieldArray(name);\n        return () => {\n            (control._options.shouldUnregister || shouldUnregister) &&\n                control.unregister(name);\n        };\n    }, [name, control, keyName, shouldUnregister]);\n    return {\n        swap: React.useCallback(swap, [updateValues, name, control]),\n        move: React.useCallback(move, [updateValues, name, control]),\n        prepend: React.useCallback(prepend$1, [updateValues, name, control]),\n        append: React.useCallback(append$1, [updateValues, name, control]),\n        remove: React.useCallback(remove, [updateValues, name, control]),\n        insert: React.useCallback(insert$1, [updateValues, name, control]),\n        update: React.useCallback(update, [updateValues, name, control]),\n        replace: React.useCallback(replace, [updateValues, name, control]),\n        fields: React.useMemo(() => fields.map((field, index) => ({\n            ...field,\n            [keyName]: ids.current[index] || generateId(),\n        })), [fields, keyName]),\n    };\n}\n\nfunction createSubject() {\n    let _observers = [];\n    const next = (value) => {\n        for (const observer of _observers) {\n            observer.next && observer.next(value);\n        }\n    };\n    const subscribe = (observer) => {\n        _observers.push(observer);\n        return {\n            unsubscribe: () => {\n                _observers = _observers.filter((o) => o !== observer);\n            },\n        };\n    };\n    const unsubscribe = () => {\n        _observers = [];\n    };\n    return {\n        get observers() {\n            return _observers;\n        },\n        next,\n        subscribe,\n        unsubscribe,\n    };\n}\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2) {\n    if (isPrimitive(object1) || isPrimitive(object2)) {\n        return object1 === object2;\n    }\n    if (isDateObject(object1) && isDateObject(object2)) {\n        return object1.getTime() === object2.getTime();\n    }\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const val1 = object1[key];\n        if (!keys2.includes(key)) {\n            return false;\n        }\n        if (key !== 'ref') {\n            const val2 = object2[key];\n            if ((isDateObject(val1) && isDateObject(val2)) ||\n                (isObject(val1) && isObject(val2)) ||\n                (Array.isArray(val1) && Array.isArray(val2))\n                ? !deepEqual(val1, val2)\n                : val1 !== val2) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nvar isMultipleSelect = (element) => element.type === `select-multiple`;\n\nvar isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar live = (ref) => isHTMLElement(ref) && ref.isConnected;\n\nvar objectHasFunction = (data) => {\n    for (const key in data) {\n        if (isFunction(data[key])) {\n            return true;\n        }\n    }\n    return false;\n};\n\nfunction markFieldsDirty(data, fields = {}) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                fields[key] = Array.isArray(data[key]) ? [] : {};\n                markFieldsDirty(data[key], fields[key]);\n            }\n            else if (!isNullOrUndefined(data[key])) {\n                fields[key] = true;\n            }\n        }\n    }\n    return fields;\n}\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                if (isUndefined(formValues) ||\n                    isPrimitive(dirtyFieldsFromValues[key])) {\n                    dirtyFieldsFromValues[key] = Array.isArray(data[key])\n                        ? markFieldsDirty(data[key], [])\n                        : { ...markFieldsDirty(data[key]) };\n                }\n                else {\n                    getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\n                }\n            }\n            else {\n                dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n            }\n        }\n    }\n    return dirtyFieldsFromValues;\n}\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nvar getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\n    ? value\n    : valueAsNumber\n        ? value === ''\n            ? NaN\n            : value\n                ? +value\n                : value\n        : valueAsDate && isString(value)\n            ? new Date(value)\n            : setValueAs\n                ? setValueAs(value)\n                : value;\n\nfunction getFieldValue(_f) {\n    const ref = _f.ref;\n    if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n        return;\n    }\n    if (isFileInput(ref)) {\n        return ref.files;\n    }\n    if (isRadioInput(ref)) {\n        return getRadioValue(_f.refs).value;\n    }\n    if (isMultipleSelect(ref)) {\n        return [...ref.selectedOptions].map(({ value }) => value);\n    }\n    if (isCheckBoxInput(ref)) {\n        return getCheckboxValue(_f.refs).value;\n    }\n    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\n    const fields = {};\n    for (const name of fieldsNames) {\n        const field = get(_fields, name);\n        field && set(fields, name, field._f);\n    }\n    return {\n        criteriaMode,\n        names: [...fieldsNames],\n        fields,\n        shouldUseNativeValidation,\n    };\n};\n\nvar getRuleValue = (rule) => isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n        ? rule.source\n        : isObject(rule)\n            ? isRegex(rule.value)\n                ? rule.value.source\n                : rule.value\n            : rule;\n\nvar hasValidation = (options) => options.mount &&\n    (options.required ||\n        options.min ||\n        options.max ||\n        options.maxLength ||\n        options.minLength ||\n        options.pattern ||\n        options.validate);\n\nfunction schemaErrorLookup(errors, _fields, name) {\n    const error = get(errors, name);\n    if (error || isKey(name)) {\n        return {\n            error,\n            name,\n        };\n    }\n    const names = name.split('.');\n    while (names.length) {\n        const fieldName = names.join('.');\n        const field = get(_fields, fieldName);\n        const foundError = get(errors, fieldName);\n        if (field && !Array.isArray(field) && name !== fieldName) {\n            return { name };\n        }\n        if (foundError && foundError.type) {\n            return {\n                name: fieldName,\n                error: foundError,\n            };\n        }\n        names.pop();\n    }\n    return {\n        name,\n    };\n}\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\n    if (mode.isOnAll) {\n        return false;\n    }\n    else if (!isSubmitted && mode.isOnTouch) {\n        return !(isTouched || isBlurEvent);\n    }\n    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n        return !isBlurEvent;\n    }\n    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n        return isBlurEvent;\n    }\n    return true;\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nfunction createFormControl(props = {}, flushRootRender) {\n    let _options = {\n        ...defaultOptions,\n        ...props,\n    };\n    let _formState = {\n        submitCount: 0,\n        isDirty: false,\n        isLoading: isFunction(_options.defaultValues),\n        isValidating: false,\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        touchedFields: {},\n        dirtyFields: {},\n        errors: {},\n    };\n    let _fields = {};\n    let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values)\n        ? cloneObject(_options.defaultValues || _options.values) || {}\n        : {};\n    let _formValues = _options.shouldUnregister\n        ? {}\n        : cloneObject(_defaultValues);\n    let _state = {\n        action: false,\n        mount: false,\n        watch: false,\n    };\n    let _names = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n    };\n    let delayErrorCallback;\n    let timer = 0;\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    const _subjects = {\n        values: createSubject(),\n        array: createSubject(),\n        state: createSubject(),\n    };\n    const shouldCaptureDirtyFields = props.resetOptions && props.resetOptions.keepDirtyValues;\n    const validationModeBeforeSubmit = getValidationModes(_options.mode);\n    const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n    const debounce = (callback) => (wait) => {\n        clearTimeout(timer);\n        timer = setTimeout(callback, wait);\n    };\n    const _updateValid = async (shouldUpdateValid) => {\n        if (_proxyFormState.isValid || shouldUpdateValid) {\n            const isValid = _options.resolver\n                ? isEmptyObject((await _executeSchema()).errors)\n                : await executeBuiltInValidation(_fields, true);\n            if (isValid !== _formState.isValid) {\n                _subjects.state.next({\n                    isValid,\n                });\n            }\n        }\n    };\n    const _updateIsValidating = (value) => _proxyFormState.isValidating &&\n        _subjects.state.next({\n            isValidating: value,\n        });\n    const _updateFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {\n        if (args && method) {\n            _state.action = true;\n            if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n                const fieldValues = method(get(_fields, name), args.argA, args.argB);\n                shouldSetValues && set(_fields, name, fieldValues);\n            }\n            if (shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.errors, name))) {\n                const errors = method(get(_formState.errors, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.errors, name, errors);\n                unsetEmptyArray(_formState.errors, name);\n            }\n            if (_proxyFormState.touchedFields &&\n                shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.touchedFields, name))) {\n                const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n            }\n            if (_proxyFormState.dirtyFields) {\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n            }\n            _subjects.state.next({\n                name,\n                isDirty: _getDirty(name, values),\n                dirtyFields: _formState.dirtyFields,\n                errors: _formState.errors,\n                isValid: _formState.isValid,\n            });\n        }\n        else {\n            set(_formValues, name, values);\n        }\n    };\n    const updateErrors = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\n        const field = get(_fields, name);\n        if (field) {\n            const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\n            isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipSetValueAs\n                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))\n                : setFieldValue(name, defaultValue);\n            _state.mount && _updateValid();\n        }\n    };\n    const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\n        let shouldUpdateField = false;\n        let isPreviousDirty = false;\n        const output = {\n            name,\n        };\n        if (!isBlurEvent || shouldDirty) {\n            if (_proxyFormState.isDirty) {\n                isPreviousDirty = _formState.isDirty;\n                _formState.isDirty = output.isDirty = _getDirty();\n                shouldUpdateField = isPreviousDirty !== output.isDirty;\n            }\n            const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\n            isPreviousDirty = get(_formState.dirtyFields, name);\n            isCurrentFieldPristine\n                ? unset(_formState.dirtyFields, name)\n                : set(_formState.dirtyFields, name, true);\n            output.dirtyFields = _formState.dirtyFields;\n            shouldUpdateField =\n                shouldUpdateField ||\n                    (_proxyFormState.dirtyFields &&\n                        isPreviousDirty !== !isCurrentFieldPristine);\n        }\n        if (isBlurEvent) {\n            const isPreviousFieldTouched = get(_formState.touchedFields, name);\n            if (!isPreviousFieldTouched) {\n                set(_formState.touchedFields, name, isBlurEvent);\n                output.touchedFields = _formState.touchedFields;\n                shouldUpdateField =\n                    shouldUpdateField ||\n                        (_proxyFormState.touchedFields &&\n                            isPreviousFieldTouched !== isBlurEvent);\n            }\n        }\n        shouldUpdateField && shouldRender && _subjects.state.next(output);\n        return shouldUpdateField ? output : {};\n    };\n    const shouldRenderByError = (name, isValid, error, fieldState) => {\n        const previousFieldError = get(_formState.errors, name);\n        const shouldUpdateValid = _proxyFormState.isValid &&\n            isBoolean(isValid) &&\n            _formState.isValid !== isValid;\n        if (props.delayError && error) {\n            delayErrorCallback = debounce(() => updateErrors(name, error));\n            delayErrorCallback(props.delayError);\n        }\n        else {\n            clearTimeout(timer);\n            delayErrorCallback = null;\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n            !isEmptyObject(fieldState) ||\n            shouldUpdateValid) {\n            const updatedFormState = {\n                ...fieldState,\n                ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n                errors: _formState.errors,\n                name,\n            };\n            _formState = {\n                ..._formState,\n                ...updatedFormState,\n            };\n            _subjects.state.next(updatedFormState);\n        }\n        _updateIsValidating(false);\n    };\n    const _executeSchema = async (name) => _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));\n    const executeSchemaAndUpdateState = async (names) => {\n        const { errors } = await _executeSchema();\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {\n        valid: true,\n    }) => {\n        for (const name in fields) {\n            const field = fields[name];\n            if (field) {\n                const { _f, ...fieldValue } = field;\n                if (_f) {\n                    const isFieldArrayRoot = _names.array.has(_f.name);\n                    const fieldError = await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation && !shouldOnlyCheckValid, isFieldArrayRoot);\n                    if (fieldError[_f.name]) {\n                        context.valid = false;\n                        if (shouldOnlyCheckValid) {\n                            break;\n                        }\n                    }\n                    !shouldOnlyCheckValid &&\n                        (get(fieldError, _f.name)\n                            ? isFieldArrayRoot\n                                ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name)\n                                : set(_formState.errors, _f.name, fieldError[_f.name])\n                            : unset(_formState.errors, _f.name));\n                }\n                fieldValue &&\n                    (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const _removeUnmounted = () => {\n        for (const name of _names.unMount) {\n            const field = get(_fields, name);\n            field &&\n                (field._f.refs\n                    ? field._f.refs.every((ref) => !live(ref))\n                    : !live(field._f.ref)) &&\n                unregister(name);\n        }\n        _names.unMount = new Set();\n    };\n    const _getDirty = (name, data) => (name && data && set(_formValues, name, data),\n        !deepEqual(getValues(), _defaultValues));\n    const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {\n        ...(_state.mount\n            ? _formValues\n            : isUndefined(defaultValue)\n                ? _defaultValues\n                : isString(names)\n                    ? { [names]: defaultValue }\n                    : defaultValue),\n    }, isGlobal, defaultValue);\n    const _getFieldArray = (name) => compact(get(_state.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []));\n    const setFieldValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        let fieldValue = value;\n        if (field) {\n            const fieldReference = field._f;\n            if (fieldReference) {\n                !fieldReference.disabled &&\n                    set(_formValues, name, getFieldValueAs(value, fieldReference));\n                fieldValue =\n                    isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n                        ? ''\n                        : value;\n                if (isMultipleSelect(fieldReference.ref)) {\n                    [...fieldReference.ref.options].forEach((optionRef) => (optionRef.selected = fieldValue.includes(optionRef.value)));\n                }\n                else if (fieldReference.refs) {\n                    if (isCheckBoxInput(fieldReference.ref)) {\n                        fieldReference.refs.length > 1\n                            ? fieldReference.refs.forEach((checkboxRef) => (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                                (checkboxRef.checked = Array.isArray(fieldValue)\n                                    ? !!fieldValue.find((data) => data === checkboxRef.value)\n                                    : fieldValue === checkboxRef.value))\n                            : fieldReference.refs[0] &&\n                                (fieldReference.refs[0].checked = !!fieldValue);\n                    }\n                    else {\n                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else if (isFileInput(fieldReference.ref)) {\n                    fieldReference.ref.value = '';\n                }\n                else {\n                    fieldReference.ref.value = fieldValue;\n                    if (!fieldReference.ref.type) {\n                        _subjects.values.next({\n                            name,\n                            values: { ..._formValues },\n                        });\n                    }\n                }\n            }\n        }\n        (options.shouldDirty || options.shouldTouch) &&\n            updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\n        options.shouldValidate && trigger(name);\n    };\n    const setValues = (name, value, options) => {\n        for (const fieldKey in value) {\n            const fieldValue = value[fieldKey];\n            const fieldName = `${name}.${fieldKey}`;\n            const field = get(_fields, fieldName);\n            (_names.array.has(name) ||\n                !isPrimitive(fieldValue) ||\n                (field && !field._f)) &&\n                !isDateObject(fieldValue)\n                ? setValues(fieldName, fieldValue, options)\n                : setFieldValue(fieldName, fieldValue, options);\n        }\n    };\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        const cloneValue = cloneObject(value);\n        set(_formValues, name, cloneValue);\n        if (isFieldArray) {\n            _subjects.array.next({\n                name,\n                values: { ..._formValues },\n            });\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n                options.shouldDirty) {\n                _subjects.state.next({\n                    name,\n                    dirtyFields: getDirtyFields(_defaultValues, _formValues),\n                    isDirty: _getDirty(name, cloneValue),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(cloneValue)\n                ? setValues(name, cloneValue, options)\n                : setFieldValue(name, cloneValue, options);\n        }\n        isWatched(name, _names) && _subjects.state.next({ ..._formState });\n        _subjects.values.next({\n            name,\n            values: { ..._formValues },\n        });\n        !_state.mount && flushRootRender();\n    };\n    const onChange = async (event) => {\n        const target = event.target;\n        let name = target.name;\n        let isFieldValueUpdated = true;\n        const field = get(_fields, name);\n        const getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event);\n        if (field) {\n            let error;\n            let isValid;\n            const fieldValue = getCurrentFieldValue();\n            const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n            const shouldSkipValidation = (!hasValidation(field._f) &&\n                !_options.resolver &&\n                !get(_formState.errors, name) &&\n                !field._f.deps) ||\n                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n            const watched = isWatched(name, _names, isBlurEvent);\n            set(_formValues, name, fieldValue);\n            if (isBlurEvent) {\n                field._f.onBlur && field._f.onBlur(event);\n                delayErrorCallback && delayErrorCallback(0);\n            }\n            else if (field._f.onChange) {\n                field._f.onChange(event);\n            }\n            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\n            const shouldRender = !isEmptyObject(fieldState) || watched;\n            !isBlurEvent &&\n                _subjects.values.next({\n                    name,\n                    type: event.type,\n                    values: { ..._formValues },\n                });\n            if (shouldSkipValidation) {\n                _proxyFormState.isValid && _updateValid();\n                return (shouldRender &&\n                    _subjects.state.next({ name, ...(watched ? {} : fieldState) }));\n            }\n            !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n            _updateIsValidating(true);\n            if (_options.resolver) {\n                const { errors } = await _executeSchema([name]);\n                const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n                const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n                error = errorLookupResult.error;\n                name = errorLookupResult.name;\n                isValid = isEmptyObject(errors);\n            }\n            else {\n                error = (await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\n                isFieldValueUpdated =\n                    isNaN(fieldValue) ||\n                        fieldValue === get(_formValues, name, fieldValue);\n                if (isFieldValueUpdated) {\n                    if (error) {\n                        isValid = false;\n                    }\n                    else if (_proxyFormState.isValid) {\n                        isValid = await executeBuiltInValidation(_fields, true);\n                    }\n                }\n            }\n            if (isFieldValueUpdated) {\n                field._f.deps &&\n                    trigger(field._f.deps);\n                shouldRenderByError(name, isValid, error, fieldState);\n            }\n        }\n    };\n    const trigger = async (name, options = {}) => {\n        let isValid;\n        let validationResult;\n        const fieldNames = convertToArrayPayload(name);\n        _updateIsValidating(true);\n        if (_options.resolver) {\n            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n            isValid = isEmptyObject(errors);\n            validationResult = name\n                ? !fieldNames.some((name) => get(errors, name))\n                : isValid;\n        }\n        else if (name) {\n            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {\n                const field = get(_fields, fieldName);\n                return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);\n            }))).every(Boolean);\n            !(!validationResult && !_formState.isValid) && _updateValid();\n        }\n        else {\n            validationResult = isValid = await executeBuiltInValidation(_fields);\n        }\n        _subjects.state.next({\n            ...(!isString(name) ||\n                (_proxyFormState.isValid && isValid !== _formState.isValid)\n                ? {}\n                : { name }),\n            ...(_options.resolver || !name ? { isValid } : {}),\n            errors: _formState.errors,\n            isValidating: false,\n        });\n        options.shouldFocus &&\n            !validationResult &&\n            focusFieldBy(_fields, (key) => key && get(_formState.errors, key), name ? fieldNames : _names.mount);\n        return validationResult;\n    };\n    const getValues = (fieldNames) => {\n        const values = {\n            ..._defaultValues,\n            ...(_state.mount ? _formValues : {}),\n        };\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const getFieldState = (name, formState) => ({\n        invalid: !!get((formState || _formState).errors, name),\n        isDirty: !!get((formState || _formState).dirtyFields, name),\n        isTouched: !!get((formState || _formState).touchedFields, name),\n        error: get((formState || _formState).errors, name),\n    });\n    const clearErrors = (name) => {\n        name &&\n            convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName));\n        _subjects.state.next({\n            errors: name ? _formState.errors : {},\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        set(_formState.errors, name, {\n            ...error,\n            ref,\n        });\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (name, defaultValue) => isFunction(name)\n        ? _subjects.values.subscribe({\n            next: (payload) => name(_getWatch(undefined, defaultValue), payload),\n        })\n        : _getWatch(name, defaultValue, true);\n    const unregister = (name, options = {}) => {\n        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(fieldName);\n            _names.array.delete(fieldName);\n            if (!options.keepValue) {\n                unset(_fields, fieldName);\n                unset(_formValues, fieldName);\n            }\n            !options.keepError && unset(_formState.errors, fieldName);\n            !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n            !options.keepTouched && unset(_formState.touchedFields, fieldName);\n            !_options.shouldUnregister &&\n                !options.keepDefaultValue &&\n                unset(_defaultValues, fieldName);\n        }\n        _subjects.values.next({\n            values: { ..._formValues },\n        });\n        _subjects.state.next({\n            ..._formState,\n            ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n        });\n        !options.keepIsValid && _updateValid();\n    };\n    const register = (name, options = {}) => {\n        let field = get(_fields, name);\n        const disabledIsDefined = isBoolean(options.disabled);\n        set(_fields, name, {\n            ...(field || {}),\n            _f: {\n                ...(field && field._f ? field._f : { ref: { name } }),\n                name,\n                mount: true,\n                ...options,\n            },\n        });\n        _names.mount.add(name);\n        field\n            ? disabledIsDefined &&\n                set(_formValues, name, options.disabled\n                    ? undefined\n                    : get(_formValues, name, getFieldValue(field._f)))\n            : updateValidAndValue(name, true, options.value);\n        return {\n            ...(disabledIsDefined ? { disabled: options.disabled } : {}),\n            ...(_options.shouldUseNativeValidation\n                ? {\n                    required: !!options.required,\n                    min: getRuleValue(options.min),\n                    max: getRuleValue(options.max),\n                    minLength: getRuleValue(options.minLength),\n                    maxLength: getRuleValue(options.maxLength),\n                    pattern: getRuleValue(options.pattern),\n                }\n                : {}),\n            name,\n            onChange,\n            onBlur: onChange,\n            ref: (ref) => {\n                if (ref) {\n                    register(name, options);\n                    field = get(_fields, name);\n                    const fieldRef = isUndefined(ref.value)\n                        ? ref.querySelectorAll\n                            ? ref.querySelectorAll('input,select,textarea')[0] || ref\n                            : ref\n                        : ref;\n                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n                    const refs = field._f.refs || [];\n                    if (radioOrCheckbox\n                        ? refs.find((option) => option === fieldRef)\n                        : fieldRef === field._f.ref) {\n                        return;\n                    }\n                    set(_fields, name, {\n                        _f: {\n                            ...field._f,\n                            ...(radioOrCheckbox\n                                ? {\n                                    refs: [\n                                        ...refs.filter(live),\n                                        fieldRef,\n                                        ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                                    ],\n                                    ref: { type: fieldRef.type, name },\n                                }\n                                : { ref: fieldRef }),\n                        },\n                    });\n                    updateValidAndValue(name, false, undefined, fieldRef);\n                }\n                else {\n                    field = get(_fields, name, {});\n                    if (field._f) {\n                        field._f.mount = false;\n                    }\n                    (_options.shouldUnregister || options.shouldUnregister) &&\n                        !(isNameInFieldArray(_names.array, name) && _state.action) &&\n                        _names.unMount.add(name);\n                }\n            },\n        };\n    };\n    const _focusError = () => _options.shouldFocusError &&\n        focusFieldBy(_fields, (key) => key && get(_formState.errors, key), _names.mount);\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist && e.persist();\n        }\n        let fieldValues = cloneObject(_formValues);\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        if (_options.resolver) {\n            const { errors, values } = await _executeSchema();\n            _formState.errors = errors;\n            fieldValues = values;\n        }\n        else {\n            await executeBuiltInValidation(_fields);\n        }\n        unset(_formState.errors, 'root');\n        if (isEmptyObject(_formState.errors)) {\n            _subjects.state.next({\n                errors: {},\n            });\n            await onValid(fieldValues, e);\n        }\n        else {\n            if (onInvalid) {\n                await onInvalid({ ..._formState.errors }, e);\n            }\n            _focusError();\n            setTimeout(_focusError);\n        }\n        _subjects.state.next({\n            isSubmitted: true,\n            isSubmitting: false,\n            isSubmitSuccessful: isEmptyObject(_formState.errors),\n            submitCount: _formState.submitCount + 1,\n            errors: _formState.errors,\n        });\n    };\n    const resetField = (name, options = {}) => {\n        if (get(_fields, name)) {\n            if (isUndefined(options.defaultValue)) {\n                setValue(name, get(_defaultValues, name));\n            }\n            else {\n                setValue(name, options.defaultValue);\n                set(_defaultValues, name, options.defaultValue);\n            }\n            if (!options.keepTouched) {\n                unset(_formState.touchedFields, name);\n            }\n            if (!options.keepDirty) {\n                unset(_formState.dirtyFields, name);\n                _formState.isDirty = options.defaultValue\n                    ? _getDirty(name, get(_defaultValues, name))\n                    : _getDirty();\n            }\n            if (!options.keepError) {\n                unset(_formState.errors, name);\n                _proxyFormState.isValid && _updateValid();\n            }\n            _subjects.state.next({ ..._formState });\n        }\n    };\n    const _reset = (formValues, keepStateOptions = {}) => {\n        const updatedValues = formValues || _defaultValues;\n        const cloneUpdatedValues = cloneObject(updatedValues);\n        const values = formValues && !isEmptyObject(formValues)\n            ? cloneUpdatedValues\n            : _defaultValues;\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = updatedValues;\n        }\n        if (!keepStateOptions.keepValues) {\n            if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields) {\n                for (const fieldName of _names.mount) {\n                    get(_formState.dirtyFields, fieldName)\n                        ? set(values, fieldName, get(_formValues, fieldName))\n                        : setValue(fieldName, get(values, fieldName));\n                }\n            }\n            else {\n                if (isWeb && isUndefined(formValues)) {\n                    for (const name of _names.mount) {\n                        const field = get(_fields, name);\n                        if (field && field._f) {\n                            const fieldReference = Array.isArray(field._f.refs)\n                                ? field._f.refs[0]\n                                : field._f.ref;\n                            if (isHTMLElement(fieldReference)) {\n                                const form = fieldReference.closest('form');\n                                if (form) {\n                                    form.reset();\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                _fields = {};\n            }\n            _formValues = props.shouldUnregister\n                ? keepStateOptions.keepDefaultValues\n                    ? cloneObject(_defaultValues)\n                    : {}\n                : cloneUpdatedValues;\n            _subjects.array.next({\n                values: { ...values },\n            });\n            _subjects.values.next({\n                values: { ...values },\n            });\n        }\n        _names = {\n            mount: new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            watch: new Set(),\n            watchAll: false,\n            focus: '',\n        };\n        !_state.mount && flushRootRender();\n        _state.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n        _state.watch = !!props.shouldUnregister;\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: keepStateOptions.keepDirty\n                ? _formState.isDirty\n                : !!(keepStateOptions.keepDefaultValues &&\n                    !deepEqual(formValues, _defaultValues)),\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: keepStateOptions.keepDirtyValues\n                ? _formState.dirtyFields\n                : keepStateOptions.keepDefaultValues && formValues\n                    ? getDirtyFields(_defaultValues, formValues)\n                    : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitting: false,\n            isSubmitSuccessful: false,\n        });\n    };\n    const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues)\n        ? formValues(_formValues)\n        : formValues, keepStateOptions);\n    const setFocus = (name, options = {}) => {\n        const field = get(_fields, name);\n        const fieldReference = field && field._f;\n        if (fieldReference) {\n            const fieldRef = fieldReference.refs\n                ? fieldReference.refs[0]\n                : fieldReference.ref;\n            if (fieldRef.focus) {\n                fieldRef.focus();\n                options.shouldSelect && fieldRef.select();\n            }\n        }\n    };\n    const _updateFormState = (updatedFormState) => {\n        _formState = {\n            ..._formState,\n            ...updatedFormState,\n        };\n    };\n    const _resetDefaultValues = () => isFunction(_options.defaultValues) &&\n        _options.defaultValues().then((values) => {\n            reset(values, _options.resetOptions);\n            _subjects.state.next({\n                isLoading: false,\n            });\n        });\n    return {\n        control: {\n            register,\n            unregister,\n            getFieldState,\n            _executeSchema,\n            _getWatch,\n            _getDirty,\n            _updateValid,\n            _removeUnmounted,\n            _updateFieldArray,\n            _getFieldArray,\n            _reset,\n            _resetDefaultValues,\n            _updateFormState,\n            _subjects,\n            _proxyFormState,\n            get _fields() {\n                return _fields;\n            },\n            get _formValues() {\n                return _formValues;\n            },\n            get _state() {\n                return _state;\n            },\n            set _state(value) {\n                _state = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            get _formState() {\n                return _formState;\n            },\n            set _formState(value) {\n                _formState = value;\n            },\n            get _options() {\n                return _options;\n            },\n            set _options(value) {\n                _options = {\n                    ..._options,\n                    ...value,\n                };\n            },\n        },\n        trigger,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        resetField,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n        getFieldState,\n    };\n}\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useForm(props = {}) {\n    const _formControl = React.useRef();\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        isLoading: isFunction(props.defaultValues),\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        submitCount: 0,\n        dirtyFields: {},\n        touchedFields: {},\n        errors: {},\n        defaultValues: isFunction(props.defaultValues)\n            ? undefined\n            : props.defaultValues,\n    });\n    if (!_formControl.current) {\n        _formControl.current = {\n            ...createFormControl(props, () => updateFormState((formState) => ({ ...formState }))),\n            formState,\n        };\n    }\n    const control = _formControl.current.control;\n    control._options = props;\n    useSubscribe({\n        subject: control._subjects.state,\n        next: (value) => {\n            if (shouldRenderFormState(value, control._proxyFormState, control._updateFormState, true)) {\n                updateFormState({ ...control._formState });\n            }\n        },\n    });\n    React.useEffect(() => {\n        if (props.values && !deepEqual(props.values, control._defaultValues)) {\n            control._reset(props.values, control._options.resetOptions);\n        }\n        else {\n            control._resetDefaultValues();\n        }\n    }, [props.values, control]);\n    React.useEffect(() => {\n        if (!control._state.mount) {\n            control._updateValid();\n            control._state.mount = true;\n        }\n        if (control._state.watch) {\n            control._state.watch = false;\n            control._subjects.state.next({ ...control._formState });\n        }\n        control._removeUnmounted();\n    });\n    _formControl.current.formState = getProxyFormState(formState, control);\n    return _formControl.current;\n}\n\nexport { Controller, FormProvider, appendErrors, get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };\n//# sourceMappingURL=index.esm.mjs.map\n","import * as React from \"react\";\r\nimport Title from \"../fonts/title\";\r\nimport SubTitle from \"../fonts/sub-title\";\r\nimport {\r\n  wrapper,\r\n  text,\r\n  mobileText,\r\n  form,\r\n  mobileForm,\r\n  input,\r\n  mobileInput,\r\n  error,\r\n  mobileError,\r\n  subtitle,\r\n  contactDataWrapper,\r\n  mobileContactDataWrapper,\r\n  contactItem,\r\n  mobileContactItem,\r\n  mobileIcon,\r\n  icon,\r\n  contactText,\r\n  mobileContactText,\r\n  infoText,\r\n  mobileInfoText,\r\n  copyRight,\r\n} from \"../../styles/components/contact.module.scss\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\n\r\nconst ContactView = ({\r\n  mobileView,\r\n  id,\r\n}: {\r\n  mobileView: boolean;\r\n  id: string;\r\n}) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data: any) => {\r\n    console.log(data);\r\n    const { username, email, subject, message } = data;\r\n    const to_send = {\r\n      name: username,\r\n      email: email,\r\n      subject: subject,\r\n      message: message,\r\n    };\r\n\r\n    try {\r\n      fetch(\"/netlify/functions/sendmail\", {\r\n        method: \"POST\",\r\n        mode: \"no-cors\",\r\n        body: JSON.stringify(to_send),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }).then((res) => {\r\n        if (!res.ok) {\r\n          console.log(res);\r\n          return;\r\n        }\r\n        console.log(\"Successfully sent\");\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  // const handleChange = (e) => {\r\n  //   this.setState({\r\n  //     [e.target.name]: e.target.value,\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <div id={id} className={wrapper}>\r\n      <Title mobileView={mobileView} title=\"CONTACT\"></Title>\r\n      <div className={subtitle}>\r\n        <SubTitle\r\n          mobileView={mobileView}\r\n          subtitle=\"I'd Love to Hear From You.\"\r\n        ></SubTitle>\r\n      </div>\r\n\r\n      <div className={mobileView ? mobileText : text}>\r\n        If you require a website, an android application, or bespoke software\r\n        with well-defined specifications, please feel free to get in touch using\r\n        the contact information provided below.\r\n      </div>\r\n\r\n      <div\r\n        className={mobileView ? mobileContactDataWrapper : contactDataWrapper}\r\n      >\r\n        <div className={mobileView ? mobileContactItem : contactItem}>\r\n          <div className={mobileView ? mobileIcon : icon}>\r\n            <StaticImage src=\"../../assets/location.png\" alt=\"location icon\" />\r\n          </div>\r\n          <div className={mobileView ? mobileContactText : contactText}>\r\n            WHERE TO FIND ME\r\n          </div>\r\n          <div className={mobileView ? mobileInfoText : infoText}>\r\n            Siphocosini\r\n            <br />\r\n            Hhohho\r\n            <br />\r\n            Eswatini\r\n          </div>\r\n        </div>\r\n        <div className={mobileView ? mobileContactItem : contactItem}>\r\n          <div className={mobileView ? mobileIcon : icon}>\r\n            <StaticImage src=\"../../assets/email.png\" alt=\"email icon\" />\r\n          </div>\r\n          <div className={mobileView ? mobileContactText : contactText}>\r\n            EMAIL ME AT\r\n          </div>\r\n          <div className={mobileView ? mobileInfoText : infoText}>\r\n            malazafanelesibonge@gmail.com\r\n          </div>\r\n        </div>\r\n        <div className={mobileView ? mobileContactItem : contactItem}>\r\n          <div className={mobileView ? mobileIcon : icon}>\r\n            <StaticImage src=\"../../assets/telephone.png\" alt=\"phone icon\" />\r\n          </div>\r\n          <div className={mobileView ? mobileContactText : contactText}>\r\n            CALL ME AT\r\n          </div>\r\n          <div className={mobileView ? mobileInfoText : infoText}>\r\n            Mobile 1: (+268) 7822 1507\r\n            <br /> Mobile 2: (+268) 7999 0188\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={copyRight}>\r\n        &copy; Copyright 2023 | Developed by Fanelesibonge Malaza\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactView;\r\n\r\n// <div className={mobileView ? mobileForm : form}>\r\n//         <form onSubmit={handleSubmit(onSubmit)}>\r\n//           <div>\r\n//             <input\r\n//               className={mobileView ? mobileInput : input}\r\n//               id=\"name\"\r\n//               placeholder=\"Name\"\r\n//               type=\"text\"\r\n//               {...register(\"username\", {\r\n//                 required: true,\r\n//               })}\r\n//             />\r\n//             {errors.username && (\r\n//               <div className={mobileView ? mobileError : error}>\r\n//                 This field is required\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               className={mobileView ? mobileInput : input}\r\n//               id=\"email\"\r\n//               placeholder=\"Email Address\"\r\n//               type=\"email\"\r\n//               {...register(\"email\", {\r\n//                 required: true,\r\n//                 pattern: {\r\n//                   value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\r\n//                   message: \"Email is not valid.\",\r\n//                 },\r\n//               })}\r\n//             />\r\n//             {errors.email && errors.email.type === \"pattern\" && (\r\n//               <div className={mobileView ? mobileError : error}>\r\n//                 This field is required\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//           <div>\r\n//             <input\r\n//               className={mobileView ? mobileInput : input}\r\n//               id=\"subject\"\r\n//               placeholder=\"Subject\"\r\n//               type=\"text\"\r\n//               {...register(\"subject\")}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <textarea\r\n//               placeholder=\"Message\"\r\n//               id=\"message\"\r\n//               cols={70}\r\n//               rows={20}\r\n//               {...register(\"message\", {\r\n//                 required: true,\r\n//               })}\r\n//             ></textarea>\r\n//             {errors.message && (\r\n//               <div className={mobileView ? mobileError : error}>\r\n//                 This field is required\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//\r\n//           <div>\r\n//             <button type=\"submit\">SUBMIT</button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//\r\n","import * as React from \"react\";\r\nimport Header from \"../header/header\";\r\nimport AboutMe from \"../about-me/about-me\";\r\nimport ResumeView from \"../resume/resume\";\r\nimport { graphql } from \"gatsby\";\r\nimport ContactView from \"../contact-me/contact\";\r\n\r\nconst DesktopView = () => {\r\n  return (\r\n    <div>\r\n      <Header mobileView={false}></Header>\r\n      <AboutMe id=\"about\" mobileView={false}></AboutMe>\r\n      <ResumeView mobileView={false}></ResumeView>\r\n      <ContactView id=\"contact\" mobileView={false}></ContactView>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DesktopView;\r\n","import * as React from \"react\";\r\nimport Header from \"../header/header\";\r\nimport AboutMe from \"../about-me/about-me\";\r\nimport ResumeView from \"../resume/resume\";\r\nimport ContactView from \"../contact-me/contact\";\r\n\r\nconst MobileView = () => {\r\n  return (\r\n    <div>\r\n      <Header mobileView={true}></Header>\r\n      <AboutMe id=\"about\" mobileView={true}></AboutMe>\r\n      <ResumeView mobileView={true}></ResumeView>\r\n      <ContactView id=\"contact\" mobileView={true}></ContactView>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileView;\r\n","import * as React from \"react\";\r\nimport { breakpoint, useViewport } from \"../../provider/viewport-provider\";\r\nimport DesktopView from \"../desktop-component/desktop-view\";\r\nimport MobileView from \"../mobile-component/mobile-view\";\r\nimport { useBreakpoint } from \"gatsby-plugin-breakpoints\";\r\n\r\nconst AppComponent = () => {\r\n  const { width } = useViewport();\r\n  const brkpoint = 869;\r\n\r\n  const breakpoints = useBreakpoint();\r\n  console.log(`These are breakpoints: ${breakpoints}`);\r\n  return breakpoints.sm ? (\r\n    <MobileView></MobileView>\r\n  ) : (\r\n    <DesktopView></DesktopView>\r\n  );\r\n};\r\n\r\nexport default AppComponent;\r\n","import * as React from \"react\";\r\nimport DesktopView from \"../components/desktop-component/desktop-view\";\r\nimport ViewportProvider, { useViewport } from \"../provider/viewport-provider\";\r\nimport AppComponent from \"../components/index/index-component\";\r\n\r\nconst IndexPage = () => {\r\n  // console.log(process.env.APIKEY);\r\n  return (\r\n    <ViewportProvider>\r\n      <AppComponent />\r\n    </ViewportProvider>\r\n  );\r\n};\r\n\r\nexport const Head = () => <title>Portfolio | Fanelesibonge Malaza</title>;\r\n\r\nexport default IndexPage;\r\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["_BreakpointProvider","require","exports","useBreakpoint","BreakpointProvider","BreakpointContext","withBreakpoints","_interopRequireDefault","__esModule","_extends2","_react","Component","props","breakpoints","default","createElement","viewportContext","React","_ref","children","hasWindow","window","width","setWidth","innerWidth","height","setHeight","innerHeight","handleWindowSize","addEventListener","removeEventListener","Provider","value","mobileView","className","Link","to","StaticImage","src","alt","__imageData","title","subtitle","mobileTextStyle","mobileTextTitleStyle","profileItemWrapper","textStyle","textTitleStyle","subsubtitle","id","Title","SubTitle","href","target","SubSubTitle","resume","download","workExperience","experienceTitle","experienceDuration","iconPath","iconAlt","companyName","jobDescription","data","useStaticQuery","allMdx","edges","map","edge","node","frontmatter","ExperienceItem","excerpt","majors","duration","school","contactItem","contactText","icon","infoText","mobileContactItem","mobileContactText","mobileIcon","mobileInfoText","isCheckBoxInput","element","type","isDateObject","Date","isNullOrUndefined","isObjectType","isObject","Array","isArray","getEventValue","event","checked","isNameInFieldArray","names","name","has","substring","search","getNodeParentName","isPlainObject","tempObject","prototypeCopy","constructor","prototype","hasOwnProperty","isWeb","HTMLElement","document","cloneObject","copy","Set","Blob","FileList","key","compact","filter","Boolean","isUndefined","val","undefined","get","obj","path","defaultValue","result","split","reduce","EVENTS","BLUR","FOCUS_OUT","CHANGE","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","INPUT_VALIDATION_RULES","getProxyFormState","formState","control","localProxyFormState","isRoot","defaultValues","_defaultValues","Object","defineProperty","_key","_proxyFormState","isEmptyObject","keys","length","shouldRenderFormState","formStateData","updateFormState","find","convertToArrayPayload","useSubscribe","_props","current","subscription","disabled","subject","subscribe","next","unsubscribe","isString","generateWatchOutput","_names","formValues","isGlobal","watch","add","fieldName","watchAll","isKey","test","stringToPath","input","replace","set","object","index","tempPath","lastIndex","newValue","objValue","isNaN","appendErrors","validateAllFieldCriteria","errors","message","types","focusFieldBy","fields","callback","fieldsNames","field","_f","currentField","ref","focus","refs","getValidationModes","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","isWatched","isBlurEvent","some","watchName","startsWith","slice","updateFieldArrayRootError","error","fieldArrayErrors","isBoolean","isFileInput","isFunction","isHTMLElement","owner","ownerDocument","defaultView","isMessage","isRadioInput","isRegex","RegExp","defaultResult","isValid","validResult","getCheckboxValue","options","values","option","attributes","defaultReturn","getRadioValue","previous","getValidateError","every","getValueAndMessage","validationData","validateField","async","shouldUseNativeValidation","isFieldArray","required","maxLength","minLength","min","max","pattern","validate","valueAsNumber","mount","inputValue","inputRef","setCustomValidity","reportValidity","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueDate","valueAsDate","convertTimeToDate","time","toDateString","isTime","isWeek","valueNumber","maxLengthOutput","minLengthOutput","patternValue","match","validateError","validationResult","unset","paths","childObject","updatePath","baseGet","isEmptyArray","createSubject","_observers","observers","observer","push","o","isPrimitive","deepEqual","object1","object2","getTime","keys1","keys2","val1","includes","val2","isMultipleSelect","live","isConnected","objectHasFunction","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getDirtyFields","getFieldValueAs","setValueAs","NaN","getFieldValue","files","selectedOptions","getResolverOptions","_fields","criteriaMode","getRuleValue","rule","source","hasValidation","schemaErrorLookup","join","foundError","pop","skipValidation","isTouched","isSubmitted","reValidateMode","unsetEmptyArray","defaultOptions","shouldFocusError","createFormControl","flushRootRender","delayErrorCallback","_options","_formState","submitCount","isDirty","isLoading","isValidating","isSubmitting","isSubmitSuccessful","touchedFields","dirtyFields","_formValues","shouldUnregister","_state","action","unMount","array","timer","_subjects","state","shouldCaptureDirtyFields","resetOptions","keepDirtyValues","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","_updateValid","shouldUpdateValid","resolver","_executeSchema","executeBuiltInValidation","_updateIsValidating","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","_getDirty","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","fieldState","previousFieldError","delayError","updateErrors","wait","clearTimeout","setTimeout","updatedFormState","context","shouldOnlyCheckValid","valid","isFieldArrayRoot","fieldError","getValues","_getWatch","fieldReference","forEach","optionRef","selected","checkboxRef","radioRef","shouldTouch","shouldValidate","trigger","setValues","fieldKey","setValue","cloneValue","isFieldValueUpdated","shouldSkipValidation","deps","watched","previousErrorLookupResult","errorLookupResult","fieldNames","executeSchemaAndUpdateState","Promise","shouldFocus","getFieldState","invalid","unregister","delete","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","register","disabledIsDefined","fieldRef","querySelectorAll","radioOrCheckbox","_focusError","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","keepDefaultValues","keepValues","form","closest","reset","keepSubmitCount","keepIsSubmitted","keepErrors","_removeUnmounted","_updateFieldArray","method","args","shouldSetValues","shouldUpdateFieldsAndState","fieldValues","argA","argB","_getFieldArray","_resetDefaultValues","then","_updateFormState","handleSubmit","onValid","onInvalid","e","preventDefault","persist","payload","resetField","clearErrors","inputName","setError","setFocus","shouldSelect","select","_formControl","useForm","DesktopView","Header","AboutMe","ResumeView","ContactView","MobileView","AppComponent","useViewport","console","log","sm","Head","IndexPage","ViewportProvider","_extends","module","assign","i","arguments","call","apply","this"],"sourceRoot":""}