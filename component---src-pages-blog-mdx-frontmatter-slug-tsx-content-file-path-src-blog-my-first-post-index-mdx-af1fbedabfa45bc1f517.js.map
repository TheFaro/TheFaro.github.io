{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-tsx-content-file-path-src-blog-my-first-post-index-mdx-af1fbedabfa45bc1f517.js","mappings":"sOAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,OAAQ,SACRC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,mCAAoCO,EAAAA,cAAoBV,EAAYI,GAAI,KAAM,SAAU,KAAM,KAAMM,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,cAAeO,EAAAA,cAAoBV,EAAYK,OAAQ,KAAM,YAAa,gBAAiB,KAAMK,EAAAA,cAAoBV,EAAYM,GAAI,KAAM,KAAMI,EAAAA,cAAoBV,EAAYO,GAAI,KAAM,gBAAiB,KAAMG,EAAAA,cAAoBV,EAAYO,GAAI,KAAM,WAAY,KAAMG,EAAAA,cAAoBV,EAAYO,GAAI,KAAM,6BAA8B,MAC/jB,CAKA,MAJA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWb,EAAOW,EAAAA,cAAoBZ,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCXA,MAAMc,EAAWC,IACf,IAAI,KAACC,EAAI,SAAEC,GAAYF,EACvB,MAAMG,GAAQC,EAAAA,EAAAA,GAASH,EAAKI,IAAIC,YAAYC,YAC5C,OAAOX,EAAAA,cAAoBY,EAAAA,EAAQ,CACjCC,UAAW,yBACVb,EAAAA,cAAoB,IAAK,KAAM,WAAYK,EAAKI,IAAIC,YAAYI,MAAOd,EAAAA,cAAoBe,EAAAA,EAAa,CACzGR,MAAOA,EACPS,IAAKX,EAAKI,IAAIC,YAAYO,WACxBX,EAAS,EAGFY,EAAOA,IAAMlB,EAAAA,cAAoBmB,EAAAA,EAAK,CACjDC,MAAO,0BAGM,SAASC,EAAiBhC,GACvC,OAAOW,EAAAA,cAAoBG,EAAUd,EAAOW,EAAAA,cAAoBsB,EAAqBjC,GACvF,C,+ECnBWkC,EAAc,sCCsCzB,MA/BenB,IAAA,IAAC,UACdS,EAAS,SACTP,GAIDF,EAAA,OACCJ,EAAAA,cAAA,OAAKwB,UDhBgB,mCCiBnBxB,EAAAA,cAAA,UAAQwB,UDZW,oCCYW,kBAC9BxB,EAAAA,cAAA,WACEA,EAAAA,cAAA,MAAIwB,UDfY,mCCgBdxB,EAAAA,cAAA,MAAIwB,UAAWD,GACbvB,EAAAA,cAACyB,EAAAA,GAAI,CAACC,GAAG,KAAI,SAEf1B,EAAAA,cAAA,MAAIwB,UAAWD,GACbvB,EAAAA,cAACyB,EAAAA,GAAI,CAACC,GAAG,UAAS,UAEpB1B,EAAAA,cAAA,MAAIwB,UAAWD,GACbvB,EAAAA,cAACyB,EAAAA,GAAI,CAACC,GAAG,QAAQF,UAAWD,GAAa,WAM/CvB,EAAAA,cAAA,YACEA,EAAAA,cAAA,MAAIwB,UDjCW,iCCiCUX,GACxBP,GAEC,C,qCC9BR,IANYF,IAAkC,IAAjC,MAAEgB,GAAyBhB,EACpC,OACIJ,EAAAA,cAAA,aAAQoB,EAAM,oBAAyB,C,sEC6BxC,MAAMO,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiB7B,GAC/B,MAAM8B,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAf5B,EACFA,EAAW8B,GAGb,IAAIA,KAAsB9B,IAChC,CAAC8B,EAAmB9B,GACzB,C","sources":["webpack://fanelesibonge-portfolio/./src/blog/my-first-post/index.mdx","webpack://fanelesibonge-portfolio/./src/pages/blog/{mdx.frontmatter__slug}.tsx","webpack://fanelesibonge-portfolio/./src/components/layout.module.css","webpack://fanelesibonge-portfolio/./src/components/layout.tsx","webpack://fanelesibonge-portfolio/./src/components/seo.tsx","webpack://fanelesibonge-portfolio/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This is my first post! Isn't it \", React.createElement(_components.em, null, \"great\"), \"?\"), \"\\n\", React.createElement(_components.p, null, \"Some of my \", React.createElement(_components.strong, null, \"favorite\"), \" things are:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Petting dogs\"), \"\\n\", React.createElement(_components.li, null, \"Singing\"), \"\\n\", React.createElement(_components.li, null, \"Eating potato-based foods\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/Faro/Documents/Work/Development/React/fanelesibonge-portfolio/src/blog/my-first-post/index.mdx\";\nimport * as React from \"react\";\nimport Layout from \"../../components/layout\";\nimport Seo from \"../../components/seo\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nconst BlogPost = _ref => {\n  let {data, children} = _ref;\n  const image = getImage(data.mdx.frontmatter.hero_image);\n  return React.createElement(Layout, {\n    pageTitle: \"Super Cool Blog Posts\"\n  }, React.createElement(\"p\", null, \"Posted: \", data.mdx.frontmatter.date), React.createElement(GatsbyImage, {\n    image: image,\n    alt: data.mdx.frontmatter.hero_alt\n  }), children);\n};\nconst query = \"3612906325\";\nexport const Head = () => React.createElement(Seo, {\n  title: \"Super Cool Blog Posts\"\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var heading = \"layout-module--heading--f158c\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinkText = \"layout-module--nav-link-text--69cda\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","import * as React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport {\r\n  container,\r\n  navLinks,\r\n  navLinkItem,\r\n  heading,\r\n  siteTitle,\r\n} from \"./layout.module.css\";\r\n\r\nconst Layout = ({\r\n  pageTitle,\r\n  children,\r\n}: {\r\n  pageTitle: string;\r\n  children: any;\r\n}) => (\r\n  <div className={container}>\r\n    <header className={siteTitle}>My Gatsby Site</header>\r\n    <nav>\r\n      <ul className={navLinks}>\r\n        <li className={navLinkItem}>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li className={navLinkItem}>\r\n          <Link to=\"/about\">About</Link>\r\n        </li>\r\n        <li className={navLinkItem}>\r\n          <Link to=\"/blog\" className={navLinkItem}>\r\n            Blog\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    <main>\r\n      <h1 className={heading}>{pageTitle}</h1>\r\n      {children}\r\n    </main>\r\n  </div>\r\n);\r\n\r\nexport default Layout;\r\n","import * as React from 'react'\r\n\r\nconst Seo = ({ title } : {title: string}) => {\r\n    return (\r\n        <title>{title} | My Gatsby Site</title>\r\n        )\r\n}\r\n\r\nexport default Seo;\r\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","strong","ul","li","_provideComponents","components","React","wrapper","MDXLayout","BlogPost","_ref","data","children","image","getImage","mdx","frontmatter","hero_image","Layout","pageTitle","date","GatsbyImage","alt","hero_alt","Head","Seo","title","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","navLinkItem","className","Link","to","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}